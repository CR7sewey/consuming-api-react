# CONSUMING API

# Creating react-base
1- npx create-react-app .
2- npm i eslint babel-eslint prettier eslint-config-prettier eslint-plugin-prettier -D
3- npx eslint --init
4- add .editorconfig, change eslint, prettier

# Start
npm start

# npm i styled-components

# npm i react-icons

# roteamento
npm i react-router-dom@5.2.0

# hisotry
npm i history@4.10.1

# toastify - comunicar com user, ex: email invalido e nos dixemos que o email Ã© invalido
mpn i react-toastify

# axios para fazer requesicoes
npm i axios

# Redux - necessario de quando temos um estado global ( para evitar mandar de um componente para o outro etc)
npm i redux react-redux
Sistema de login com Redux - pasta store
--> estado inical: {
  usuario_logado: false
}
--> acao ouvida por um reducer -> newState = state --> newState
useDispatch - disparar acoes
reducer - ouve

# redux async
acao (request) -> saga -> reducer -> success/fail
npm i redux-saga

# redux persiste - persistencia de dados
npm i redux-persist
podemos salvar aqui o token por exemplo par amanter user logad
